/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package morda;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.CopyOnWriteArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.Address;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.internet.MimeMessage;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListModel;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import mail.Mail;
import mail.SendMessage;
import util.Contact;
import util.DataBase;
import mail.GetMessages;
import util.RemoveMessage;
import util.Utilities;
import util.WriteMessages;

/**
 *
 * @author Darth Vader
 */
public class Morda extends javax.swing.JFrame {

    private static Morda morda;
    protected Properties startProp = new Properties();
    protected Properties saveProp = new Properties();
    protected Properties runProp = new Properties();
    private File f;
    private DefaultTableModel model;
    public Mail mail = new Mail();
    public List<Message> mesIn = new CopyOnWriteArrayList<>();
    public List<Message> mesOut = new CopyOnWriteArrayList<>();
    public List<Contact> contactList = new ArrayList<>();
    public Date lastMessageDate = null;
    public Utilities util = new Utilities();
    public Thread t;
    public DataBase db = new DataBase();
    
    /**
     * Creates new form Morda
     */
    public Morda() {
        initComponents();
        loadProperties();
        setTableSettings();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        propFrame = new javax.swing.JFrame();
        jPanel9 = new javax.swing.JPanel();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        panelCon = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtLogin = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        comboMailServer = new javax.swing.JComboBox();
        btnAddServer = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtPass = new javax.swing.JPasswordField();
        jLabel10 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        txtPOPServer = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtPOPPort = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        comboPOPCon = new javax.swing.JComboBox();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtSMTPServ = new javax.swing.JTextField();
        txtSMTPPort = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        comboSMTPCon = new javax.swing.JComboBox();
        btnCheckCon = new javax.swing.JButton();
        panelPath = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtMessageArchive = new javax.swing.JTextField();
        addressBook = new javax.swing.JFrame();
        jPanel10 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        txtFind = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableContacts = new javax.swing.JTable();
        btnAddContact = new javax.swing.JButton();
        btnRemoveContact = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstRecipients = new javax.swing.JList();
        jLabel18 = new javax.swing.JLabel();
        contact = new javax.swing.JFrame();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        fieldName = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        fieldEmail = new javax.swing.JTextField();
        addContact = new javax.swing.JButton();
        frameCreateMessage = new javax.swing.JFrame();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        fieldFrom = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        fieldSubject = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        fieldRecipients = new javax.swing.JTextField();
        jPanel15 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        paneMessageBody = new javax.swing.JEditorPane();
        btnSend = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnGetMessages = new javax.swing.JButton();
        btnCreateMessage = new javax.swing.JButton();
        btnShowAddressBook = new javax.swing.JButton();
        btnProperties = new javax.swing.JButton();
        btnStop = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblMailbox = new javax.swing.JLabel();
        lblIn = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblOut = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jSplitPane2 = new javax.swing.JSplitPane();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblFrom = new javax.swing.JLabel();
        lblSubject = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        paneShowMessage = new javax.swing.JEditorPane();

        propFrame.setTitle("Properties");
        propFrame.setMinimumSize(new java.awt.Dimension(458, 375));
        propFrame.setResizable(false);
        propFrame.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                propFrameWindowClosing(evt);
            }
        });

        jPanel9.setLayout(new java.awt.BorderLayout());

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Login");

        txtLogin.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtLogin.setToolTipText("Put your login here");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Server");

        comboMailServer.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        comboMailServer.setToolTipText("Choose the server that you use");

        btnAddServer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Add.png"))); // NOI18N
        btnAddServer.setToolTipText("Add a mailserver");
        btnAddServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddServerActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Password");

        txtPass.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtPass.setToolTipText("Put your password here");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("POP settings");

        jCheckBox1.setText("Show password");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Server");

        txtPOPServer.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtPOPServer.setToolTipText("");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Port");

        txtPOPPort.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Type of connection");

        comboPOPCon.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        comboPOPCon.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pure", "SSL", "TLS" }));

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("SMTP settings");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Server");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Port");

        txtSMTPServ.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtSMTPPort.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Type of connection");

        comboSMTPCon.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        comboSMTPCon.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pure", "SSL", "TLS" }));

        btnCheckCon.setText("Check the connection");

        javax.swing.GroupLayout panelConLayout = new javax.swing.GroupLayout(panelCon);
        panelCon.setLayout(panelConLayout);
        panelConLayout.setHorizontalGroup(
            panelConLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConLayout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(btnCheckCon, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelConLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelConLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(panelConLayout.createSequentialGroup()
                        .addGroup(panelConLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelConLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelConLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(txtPass)))
                        .addGap(18, 18, 18)
                        .addGroup(panelConLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelConLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(comboMailServer, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAddServer))
                            .addComponent(jCheckBox1))
                        .addGap(0, 8, Short.MAX_VALUE))
                    .addGroup(panelConLayout.createSequentialGroup()
                        .addGroup(panelConLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(panelConLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelConLayout.createSequentialGroup()
                                    .addComponent(jLabel13)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(comboPOPCon, 0, 68, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelConLayout.createSequentialGroup()
                                    .addGroup(panelConLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel12)
                                        .addComponent(jLabel11))
                                    .addGap(18, 18, 18)
                                    .addGroup(panelConLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtPOPServer, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                                        .addComponent(txtPOPPort)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelConLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelConLayout.createSequentialGroup()
                                .addGroup(panelConLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel15))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelConLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSMTPServ)
                                    .addComponent(txtSMTPPort)))
                            .addGroup(panelConLayout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(panelConLayout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(comboSMTPCon, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        panelConLayout.setVerticalGroup(
            panelConLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelConLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboMailServer, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelConLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8))
                    .addComponent(btnAddServer))
                .addGap(18, 18, 18)
                .addGroup(panelConLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelConLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelConLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(panelConLayout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addGap(9, 9, 9)
                            .addGroup(panelConLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel11)
                                .addComponent(txtPOPServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(panelConLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel12)
                                .addComponent(txtPOPPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel13))
                        .addComponent(comboPOPCon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelConLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(comboSMTPCon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(panelConLayout.createSequentialGroup()
                            .addComponent(jLabel14)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(panelConLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel15)
                                .addComponent(txtSMTPServ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(panelConLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel16)
                                .addComponent(txtSMTPPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel17))))
                .addGap(18, 18, 18)
                .addComponent(btnCheckCon, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(73, Short.MAX_VALUE))
        );

        jTabbedPane5.addTab("Connection", panelCon);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Message archive");

        javax.swing.GroupLayout panelPathLayout = new javax.swing.GroupLayout(panelPath);
        panelPath.setLayout(panelPathLayout);
        panelPathLayout.setHorizontalGroup(
            panelPathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPathLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtMessageArchive, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelPathLayout.setVerticalGroup(
            panelPathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPathLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(panelPathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtMessageArchive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(308, Short.MAX_VALUE))
        );

        jTabbedPane5.addTab("Path to Messages", panelPath);

        jPanel9.add(jTabbedPane5, java.awt.BorderLayout.CENTER);

        propFrame.getContentPane().add(jPanel9, java.awt.BorderLayout.CENTER);

        addressBook.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addressBook.setTitle("Address book ");
        addressBook.setMinimumSize(new java.awt.Dimension(490, 420));
        addressBook.setResizable(false);
        addressBook.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                addressBookWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                addressBookWindowOpened(evt);
            }
        });

        jPanel10.setMinimumSize(new java.awt.Dimension(500, 420));
        jPanel10.setPreferredSize(new java.awt.Dimension(500, 420));

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel19.setText("Type name to find");

        txtFind.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        tableContacts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "e-mail"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableContacts.setMaximumSize(new java.awt.Dimension(282, 285));
        tableContacts.setMinimumSize(new java.awt.Dimension(282, 285));
        tableContacts.setPreferredSize(new java.awt.Dimension(282, 285));
        jScrollPane3.setViewportView(tableContacts);

        btnAddContact.setText("Add new Contact");
        btnAddContact.setMaximumSize(new java.awt.Dimension(130, 47));
        btnAddContact.setMinimumSize(new java.awt.Dimension(130, 47));
        btnAddContact.setPreferredSize(new java.awt.Dimension(130, 47));
        btnAddContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddContactActionPerformed(evt);
            }
        });

        btnRemoveContact.setText("Remove Contact");
        btnRemoveContact.setMaximumSize(new java.awt.Dimension(130, 47));
        btnRemoveContact.setMinimumSize(new java.awt.Dimension(130, 47));
        btnRemoveContact.setPreferredSize(new java.awt.Dimension(130, 47));
        btnRemoveContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveContactActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFind))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(btnAddContact, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRemoveContact, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txtFind, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddContact, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemoveContact, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        btnAdd.setText(">>");
        btnAdd.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnAdd.setMaximumSize(new java.awt.Dimension(50, 50));
        btnAdd.setMinimumSize(new java.awt.Dimension(50, 50));
        btnAdd.setPreferredSize(new java.awt.Dimension(50, 50));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDel.setText("<<");
        btnDel.setMaximumSize(new java.awt.Dimension(50, 50));
        btnDel.setMinimumSize(new java.awt.Dimension(50, 50));
        btnDel.setPreferredSize(new java.awt.Dimension(50, 50));
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnDel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(136, 136, 136)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lstRecipients.setModel(new DefaultListModel<String>()
        );
        jScrollPane4.setViewportView(lstRecipients);

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel18.setText("List of recipients");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout addressBookLayout = new javax.swing.GroupLayout(addressBook.getContentPane());
        addressBook.getContentPane().setLayout(addressBookLayout);
        addressBookLayout.setHorizontalGroup(
            addressBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addressBookLayout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addressBookLayout.setVerticalGroup(
            addressBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        contact.setTitle("Add new contact");
        contact.setMinimumSize(new java.awt.Dimension(250, 180));
        contact.setResizable(false);

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel24.setText("New Contact");

        jLabel25.setText("Name");

        jLabel26.setText("Email");

        addContact.setText("Add");
        addContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addContactActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout contactLayout = new javax.swing.GroupLayout(contact.getContentPane());
        contact.getContentPane().setLayout(contactLayout);
        contactLayout.setHorizontalGroup(
            contactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contactLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(contactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(contactLayout.createSequentialGroup()
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(contactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24)
                            .addComponent(fieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(addContact, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(contactLayout.createSequentialGroup()
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fieldEmail)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        contactLayout.setVerticalGroup(
            contactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contactLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(contactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(fieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(contactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(fieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addContact)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        frameCreateMessage.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        frameCreateMessage.setTitle("New Message");
        frameCreateMessage.setMinimumSize(new java.awt.Dimension(700, 540));
        frameCreateMessage.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                frameCreateMessageWindowOpened(evt);
            }
        });

        jLabel20.setText("From");

        jLabel21.setText("Subject");

        jLabel22.setText("Recipients");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(fieldFrom)
                    .addComponent(fieldSubject)
                    .addComponent(fieldRecipients, javax.swing.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(fieldFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(fieldSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(fieldRecipients, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        paneMessageBody.setToolTipText("");
        jScrollPane5.setViewportView(paneMessageBody);

        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 682, Short.MAX_VALUE)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSend)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout frameCreateMessageLayout = new javax.swing.GroupLayout(frameCreateMessage.getContentPane());
        frameCreateMessage.getContentPane().setLayout(frameCreateMessageLayout);
        frameCreateMessageLayout.setHorizontalGroup(
            frameCreateMessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        frameCreateMessageLayout.setVerticalGroup(
            frameCreateMessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mailclient by Vital");
        setMinimumSize(new java.awt.Dimension(100, 100));

        jPanel1.setPreferredSize(new java.awt.Dimension(0, 70));

        btnGetMessages.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/mail_get.png"))); // NOI18N
        btnGetMessages.setText("Get Messages");
        btnGetMessages.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetMessagesActionPerformed(evt);
            }
        });

        btnCreateMessage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/create-32.png"))); // NOI18N
        btnCreateMessage.setText("Create");
        btnCreateMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateMessageActionPerformed(evt);
            }
        });

        btnShowAddressBook.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/AddressBook.png"))); // NOI18N
        btnShowAddressBook.setText("Address book");
        btnShowAddressBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowAddressBookActionPerformed(evt);
            }
        });

        btnProperties.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/properties.png"))); // NOI18N
        btnProperties.setText("Properties");
        btnProperties.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPropertiesActionPerformed(evt);
            }
        });

        btnStop.setText("STOP");
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnGetMessages)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCreateMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnShowAddressBook)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnProperties)
                .addGap(74, 74, 74)
                .addComponent(btnStop, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnShowAddressBook, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addComponent(btnCreateMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGetMessages, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnStop, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnProperties, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel2.setLayout(new java.awt.BorderLayout());

        jSplitPane1.setDividerLocation(210);
        jSplitPane1.setContinuousLayout(true);

        jPanel3.setMinimumSize(new java.awt.Dimension(150, 100));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Mailbox: ");

        jLabel5.setText("In:");

        jLabel6.setText("Out:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblMailbox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblIn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblOut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 109, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lblMailbox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lblIn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lblOut))
                .addContainerGap(426, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(jPanel3);

        jPanel4.setMinimumSize(new java.awt.Dimension(150, 100));
        jPanel4.setPreferredSize(new java.awt.Dimension(525, 497));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane2.setContinuousLayout(true);

        jPanel5.setMinimumSize(new java.awt.Dimension(100, 150));
        jPanel5.setPreferredSize(new java.awt.Dimension(572, 250));
        jPanel5.setLayout(new java.awt.BorderLayout());

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "File", "Subject", "From", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        jTable2.setFillsViewportHeight(true);
        jTable2.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jScrollPane1.setViewportView(jTable2);

        jPanel5.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jSplitPane2.setTopComponent(jPanel5);

        jPanel6.setMinimumSize(new java.awt.Dimension(100, 0));
        jPanel6.setPreferredSize(new java.awt.Dimension(572, 250));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("From");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Subject");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/message-go.png"))); // NOI18N
        jButton1.setText("Answer");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/forward.png"))); // NOI18N
        jButton2.setText("Forward");

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete-16.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblFrom)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblSubject)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 160, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(lblFrom))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(lblSubject)))
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setLayout(new java.awt.BorderLayout());

        paneShowMessage.setEditable(false);
        jScrollPane2.setViewportView(paneShowMessage);

        jPanel8.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 532, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSplitPane2.setRightComponent(jPanel6);

        jPanel4.add(jSplitPane2, java.awt.BorderLayout.CENTER);

        jSplitPane1.setRightComponent(jPanel4);

        jPanel2.add(jSplitPane1, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Показати вікно параметрів
    private void btnPropertiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPropertiesActionPerformed
        
        propFrame.setLocationRelativeTo(morda);
        propFrame.setVisible(true);
    }//GEN-LAST:event_btnPropertiesActionPerformed

    // Дії при закритті вікна параметрів
    // Параметри зберігаються до файду
    private void propFrameWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_propFrameWindowClosing
        
        saveProp.setProperty("login", txtLogin.getText());
        saveProp.setProperty("mailserver", comboMailServer.getSelectedItem().toString());
        saveProp.setProperty("password", String.valueOf(txtPass.getPassword()));
        saveProp.setProperty("POPServer", txtPOPServer.getText());
        saveProp.setProperty("POPPort", txtPOPPort.getText());
        saveProp.setProperty("POPConnectionType", comboPOPCon.getSelectedItem().toString());
        saveProp.setProperty("SMTPServer", txtSMTPServ.getText());
        saveProp.setProperty("SMTPPort", txtSMTPPort.getText());
        saveProp.setProperty("SMTPConnectionType", comboSMTPCon.getSelectedItem().toString());
        saveProp.setProperty("PathToMessages", txtMessageArchive.getText());
           
        boolean p = checkProperies();
        
        if(p) {
            writePropToFile(f, saveProp);
            util.copyProperties(saveProp, runProp);
            setMailboxName();
        } else {
            System.err.println("Something wrong with properties. Not SAVE and WRITE");
        }
    }//GEN-LAST:event_propFrameWindowClosing

    // Визначення параметрів підключення
    // Запуск процесу зчитування повідомлень
    private void btnGetMessagesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetMessagesActionPerformed
        
        mail.setUserPass(runProp.getProperty("login"), runProp.getProperty("password"));
        
        String c = runProp.getProperty("POPConnectionType");
        String server = runProp.getProperty("POPServer");
        String port = runProp.getProperty("POPPort");
        
        switch (c) {
            case "Pure" :   mail.connect(server, port);
                            break;
            case "SSL" :    mail.connectWithSSL(server, port);
                            break;
            case "TLS" :    break;
        }
        
        mail.openFolder("INBOX");
        
        (t = new Thread(new GetMessages(mail, mesIn, lblIn, jTable2))).start();        
        
    }//GEN-LAST:event_btnGetMessagesActionPerformed

    // Можна додати новий поштовий сервер у випадаючий список
    private void btnAddServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddServerActionPerformed
        
        JOptionPane op = new JOptionPane();
        String s = op.showInputDialog("Enter new mailserver");

        if (s != null) {
            comboMailServer.addItem(s);
        } else System.out.println("Ne pravilno");
    
    }//GEN-LAST:event_btnAddServerActionPerformed

    // Зупинка процесу отримання повідомлень
    // та запис дати останнього повідомлення у файл
    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        
        
        if(t != null) {
            if (t.isAlive()) {
            
                t.interrupt();

                if(t.isInterrupted()){
                    util.print("Thread is interrupted.");
                    util.copyProperties(saveProp, runProp);
                    writePropToFile(f, saveProp);
                    (new Thread(new WriteMessages(mesIn, runProp))).start();
                } else {
                    util.print("Thread is not interrupted.");
                }
            }
        } else {
            util.print("Нєхуй клацать, блядь!");
        }
    }//GEN-LAST:event_btnStopActionPerformed

    private void btnShowAddressBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowAddressBookActionPerformed
        TableColumnModel tcm = tableContacts.getColumnModel();
        tcm.getColumn(0).setMaxWidth(20);
        
        addressBook.setLocationRelativeTo(morda);
        addressBook.setVisible(true);
        
        util.clearTable(tableContacts);
        
        db.connect();
        db.createDB();
        contactList = db.readAllDB();
        
        DefaultTableModel model = (DefaultTableModel) tableContacts.getModel();
        
        Iterator<Contact> iter = contactList.iterator();
        
        while(iter.hasNext()) {
            Contact c = iter.next();
            Object[] obj = {c.id, c.name, c.email};
            model.addRow(obj);
        }
    }//GEN-LAST:event_btnShowAddressBookActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        util.print("Delete button was pressed");
        DefaultTableModel tm = (DefaultTableModel) jTable2.getModel();
        int[] rows = jTable2.getSelectedRows();
        
        (new Thread(new RemoveMessage(rows, mesIn, lblIn, tm, runProp))).start();
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnAddContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddContactActionPerformed
        
        contact.setLocationRelativeTo(this);
        contact.setVisible(true);
    }//GEN-LAST:event_btnAddContactActionPerformed

    private void addContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addContactActionPerformed
        
        db.writeRow(fieldName.getText(), fieldEmail.getText());
        db.readDB();
        
        contact.dispose();
        Contact c = db.readRow(fieldName.getText(), fieldEmail.getText());
        if(c != null) {
            contactList.add(c);
        
            DefaultTableModel model = (DefaultTableModel) tableContacts.getModel();

            Object[] obj = {c.id, c.name, c.email};
            model.addRow(obj);
        }
        
    }//GEN-LAST:event_addContactActionPerformed

    private void addressBookWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_addressBookWindowClosed
        db.close();
    }//GEN-LAST:event_addressBookWindowClosed

    private void addressBookWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_addressBookWindowOpened
        //nameList.clear();
    }//GEN-LAST:event_addressBookWindowOpened

    private void btnRemoveContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveContactActionPerformed
        int[] rows = tableContacts.getSelectedRows();
        DefaultTableModel model = (DefaultTableModel) tableContacts.getModel();
        int count = rows.length;
        int rowIndex;
        util.print("count="+count);
        for(int j = count-1; j>=0; j--) {
            rowIndex = rows[j];
            Object id = model.getValueAt(rowIndex, 0);
            model.removeRow(rowIndex);
            db.removeRow((int) id);
            util.print("Row id="+id+" was removed");
        }
    }//GEN-LAST:event_btnRemoveContactActionPerformed

    /*
    Додаємо отримувачів до JList. При цьому перевіряємо щоб отримувачі не повторювалися.
    */
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        model = (DefaultTableModel) tableContacts.getModel();
        DefaultListModel listModel = (DefaultListModel) lstRecipients.getModel();
        int rows[] = tableContacts.getSelectedRows();
        String recipients;
        int count = rows.length;
        int rowIndex;
        
        List<String> alreadyAdded = new ArrayList<>();
        List<String> nameList = new ArrayList<>();
        
        for(int i = 0; i<lstRecipients.getModel().getSize(); i++) {
            alreadyAdded.add((String)lstRecipients.getModel().getElementAt(i));
        }
        
        for(int j = count-1; j>=0; j--) {
            rowIndex = rows[j];
            String name = (String) model.getValueAt(rowIndex, 1);
            nameList.add(name);
        }
        
        nameList = util.duplicateItems(alreadyAdded, nameList);
        listModel.removeAllElements();
        Iterator<String> iter = nameList.iterator();
        while(iter.hasNext()) {
            String next = iter.next();
            listModel.addElement(next);
        }
        tableContacts.clearSelection();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        DefaultListModel listModel = (DefaultListModel) lstRecipients.getModel();
        List<String> listToRemove = lstRecipients.getSelectedValuesList();
        Iterator<String> iter = listToRemove.iterator();
        while(iter.hasNext()) {
            String next = iter.next();
            listModel.removeElement(next);
        }
        lstRecipients.clearSelection();;
    }//GEN-LAST:event_btnDelActionPerformed

    /*
    Показуємо вікно створення повідомлення.
    */
    private void btnCreateMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateMessageActionPerformed
        frameCreateMessage.setLocationRelativeTo(this);
        frameCreateMessage.setVisible(true);
    }//GEN-LAST:event_btnCreateMessageActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
   
        String from = fieldFrom.getText();
        String to = fieldRecipients.getText();
        String host = runProp.getProperty("SMTPServer");
        String subject = fieldSubject.getText();
        String text = paneMessageBody.getText();
        String connectionType = runProp.getProperty("SMTPConnectionType");
        
        (new Thread(new SendMessage(connectionType, host, runProp.getProperty("login"), runProp.getProperty("password"), from, to, subject, text))).start();
        
        frameCreateMessage.dispose();
        frameCreateMessage.setVisible(false);
    }//GEN-LAST:event_btnSendActionPerformed
    
    /*
    При відкритті вікна Create в полі From ьуде прописана поточна адреса
    */
    private void frameCreateMessageWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_frameCreateMessageWindowOpened
        fieldFrom.setText(runProp.getProperty("login")+"@"+runProp.getProperty("mailserver"));
    }//GEN-LAST:event_frameCreateMessageWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        try {
            UIManager.setLookAndFeel("com.jtattoo.plaf.acryl.AcrylLookAndFeel");
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Morda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                morda = new Morda();
                Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
                morda.setLocation(dim.width/2 - morda.getWidth()/2, dim.height/2
                        - morda.getHeight()/2);
                morda.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addContact;
    private javax.swing.JFrame addressBook;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAddContact;
    private javax.swing.JButton btnAddServer;
    private javax.swing.JButton btnCheckCon;
    private javax.swing.JButton btnCreateMessage;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnGetMessages;
    private javax.swing.JButton btnProperties;
    private javax.swing.JButton btnRemoveContact;
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btnShowAddressBook;
    private javax.swing.JButton btnStop;
    private javax.swing.JComboBox comboMailServer;
    private javax.swing.JComboBox comboPOPCon;
    private javax.swing.JComboBox comboSMTPCon;
    private javax.swing.JFrame contact;
    private javax.swing.JTextField fieldEmail;
    private javax.swing.JTextField fieldFrom;
    private javax.swing.JTextField fieldName;
    private javax.swing.JTextField fieldRecipients;
    private javax.swing.JTextField fieldSubject;
    private javax.swing.JFrame frameCreateMessage;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lblFrom;
    private javax.swing.JLabel lblIn;
    private javax.swing.JLabel lblMailbox;
    private javax.swing.JLabel lblOut;
    private javax.swing.JLabel lblSubject;
    private javax.swing.JList lstRecipients;
    private javax.swing.JEditorPane paneMessageBody;
    private javax.swing.JEditorPane paneShowMessage;
    private javax.swing.JPanel panelCon;
    private javax.swing.JPanel panelPath;
    private javax.swing.JFrame propFrame;
    private javax.swing.JTable tableContacts;
    private javax.swing.JTextField txtFind;
    private javax.swing.JTextField txtLogin;
    private javax.swing.JTextField txtMessageArchive;
    private javax.swing.JTextField txtPOPPort;
    private javax.swing.JTextField txtPOPServer;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JTextField txtSMTPPort;
    private javax.swing.JTextField txtSMTPServ;
    // End of variables declaration//GEN-END:variables

    // Зчитування параметрів з файлу
    private void loadProperties() {
        boolean p = false;
        startProp = new Properties();
        // Path to user home folder
        String workingDir = System.getProperty("user.home");
        try {
            f = new File(workingDir+"\\properties.txt");
            FileInputStream in = new FileInputStream(f);
            startProp.load(in);
            p = true;
        } catch (FileNotFoundException ex) {
            System.out.println("Property file not found");
        } catch (IOException ex) {
            System.out.println("Propblem with I/O");
        }
        if(p) {
            util.copyProperties(startProp, runProp);
            util.copyProperties(startProp, saveProp);
            txtLogin.setText(startProp.getProperty("login"));
            comboMailServer.setSelectedItem(startProp.getProperty("mailserver"));
            txtPass.setText(startProp.getProperty("password"));
            txtPOPServer.setText(startProp.getProperty("POPServer"));
            txtPOPPort.setText(startProp.getProperty("POPPort"));
            comboPOPCon.setSelectedItem(startProp.getProperty("POPConnectionType"));
            txtSMTPServ.setText(startProp.getProperty("SMTPServer"));
            txtSMTPPort.setText(startProp.getProperty("SMTPPort"));
            comboSMTPCon.setSelectedItem(startProp.getProperty("SMTPConnectionType"));
            txtMessageArchive.setText(startProp.getProperty("PathToMessages"));
            String date = startProp.getProperty("LastMessDate");
            
        }
    }
    
    // Властивості таблиці при завантаженні програми
    // Додавання раніше зчитаних повідомлень
    private void setTableSettings() {
        
        TableColumnModel  h = jTable2.getColumnModel();
        h.getColumn(0).setMinWidth(30);
        h.getColumn(0).setPreferredWidth(30);
        h.getColumn(0).setMaxWidth(30);
        
        h.getColumn(1).setPreferredWidth(250);
        h.getColumn(1).setMinWidth(100);
        
        h.getColumn(2).setPreferredWidth(200);
        h.getColumn(2).setMinWidth(100);
        
        h.getColumn(3).setMinWidth(120);
        h.getColumn(3).setPreferredWidth(120);
        h.getColumn(3).setMaxWidth(120);
        
        jTable2.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
        //jTable2.getSelectionModel().addListSelectionListener(new RowListener());
        
        setMailboxName();
        
        try {
            loadMessToTableFromArchive();
        } catch (MessagingException | FileNotFoundException ex) {
            Logger.getLogger(Morda.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    // Відображення на передній панелі назви облікового запису
    private void setMailboxName() {
        lblMailbox.setText(runProp.getProperty("login")+"@"+runProp.getProperty("mailserver"));
    }

    // Завантаження повідомлень з архіву до таблиці
    private void loadMessToTableFromArchive() throws MessagingException, FileNotFoundException {
    
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        
        if (!startProp.isEmpty() && startProp.containsKey("PathToMessages")) {
            File dir = new File(startProp.getProperty("PathToMessages"));
            
            if(dir.listFiles() != null) {
                
                for (File file : dir.listFiles()) {
                    FileInputStream fis = new FileInputStream(file);
                    MimeMessage mime = new MimeMessage(null, fis);
                    Address[] a = mime.getFrom();
                    String from = a[0].toString();
                    DateFormat df = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
                    
                    String name = util.produceFileName(mime);
                    mesIn.add(mime);
                    
                    Object[] obj = {null, mime.getSubject(), from, df.format(mime.getSentDate())};
                    model.addRow(obj);
                    
                    lblIn.setText(String.valueOf(model.getRowCount()));
                }   
            } else System.err.println("Sorry. Archive is empty :-(");
        } else {
            System.out.println("Sorry. But we dont know path to message archive :-(");
        }
    }

    // Запис Properties в файд
    private void writePropToFile(File file, Properties prop) {
        try {
            FileOutputStream out = new FileOutputStream(file);
            prop.store(out, "------no-coments-----");
            out.flush();
            out.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Morda.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Morda.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        System.out.println("Properties was wrote to file " + f.getAbsolutePath());
    }

    private boolean checkProperies() {

        boolean m = true;
        
        String login = saveProp.getProperty("login");
        String ms = saveProp.getProperty("mailserver");
        String passwd = saveProp.getProperty("password");
        String pops = saveProp.getProperty("POPServer");
        String popp = saveProp.getProperty("POPPort");
        String popct = saveProp.getProperty("POPConnectionType");
        String smtps = saveProp.getProperty("SMTPServer");
        String smtpp = saveProp.getProperty("SMTPPort");
        String smtpct = saveProp.getProperty("SMTPConnectionType");
        String pathtm = saveProp.getProperty("PathToMessages");
        
        String[] listVar =  {
          login, ms, passwd, pops, popp, popct, smtps, smtpp, smtpct, pathtm  
        };
        
        String[] listNames = {
            "login", "mailserver", "password", "POPServer", "POPPort", 
            "POPConnectionType", "SMTPServer", "SMTPPort", "SMTPConnectionType", 
            "PathToMessages"
        };
        
        int i = 0;
        for(String s : listVar) {
            if (s.equals("")) {
                m = false;
                String name = listNames[i]; 
                System.out.println(name + " have incorect value");
            } 
            i++;
        }
        
        return m;
    }

    // Відображення вмісту повідомлення при позиціонуванні курсору на ньому
//    class RowListener implements ListSelectionListener {
//        
//        @Override
//        public void valueChanged(ListSelectionEvent lse) {
//            if (lse.getValueIsAdjusting()) {
//                return;
//            }
//            
//            //showMessage();
//        }
//
//        public void showMessage() {
//            SwingUtilities.invokeLater(new Runnable() {
//
//                @Override
//                public void run() {
//                    
//                    int row = jTable2.getSelectedRow();
//                  
//                    String contentType = null, from = null, subject = null;
//
//                    try {
//                        contentType = mesList.get(row).getContentType();
//                        Address[] a = mesList.get(row).getFrom(); 
//                        from = a[0].toString();
//                        subject = mesList.get(row).getSubject();
//                    } catch (MessagingException ex) {
//                        Logger.getLogger(Morda.class.getName()).log(Level.SEVERE, null, ex);
//                    }
//                    
//                    
//                    if(contentType.equals("text/html")){
//                        
//                        paneShowMessage.setText("");
//                        paneShowMessage.setContentType("text/html");
//                        try {
//                            paneShowMessage.setText((String) mesList.get(row).getContent());
//                        } catch (IOException ex) {
//                            Logger.getLogger(Morda.class.getName()).log(Level.SEVERE, null, ex);
//                        } catch (MessagingException ex) {
//                            Logger.getLogger(Morda.class.getName()).log(Level.SEVERE, null, ex);
//                        }
//                    }
//                    
//                    if(from.length() > 40) {
//                        String cutFrom = from.substring(0, 40) + "...";
//                        lblFrom.setText(cutFrom);
//                        lblFrom.setToolTipText(from);
//                    } else lblFrom.setText(from);
//                    
//                    if(subject.length() > 40) {
//                        String cutSubject = subject.substring(0, 40) + "...";
//                        lblSubject.setText(cutSubject);
//                        lblSubject.setToolTipText(subject);
//                    } else lblSubject.setText(subject);
//                   
//                }
//            });        
//        }
//    }
    
    
    
    
}

